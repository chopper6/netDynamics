# main parameter file

# YAML is like JSON, but with more minimal syntax and allows comments
# parse.py also adds support for scientific notation in the form: 10^8

debug : true # adds various checks, may slow down simulation
verbose : true # prints out more info  
print_lap : 10 # how many laps before another print statement (if verbose) 

parallelism : 10^3 # number of networks to run in parallel (on my desktop 10^5 is the limit with fumia network)
num_samples : 10^3 # number of initial states tested
steps_per_lap : 20 # number of times to update net in a lap, unless 'lap_stop_rule' is triggered
# note that 'steps_per_lap' is also the assumed transient period for async update methods
update_rule : 'sync' # node update scheme: 'sync', 'async', or 'Gasync' 
# WARNING: async is not efficiently implemented, recommended only to compare with Gasync
# Gasync = "generalized async" where a subset of nodes are sync updated each step 

calc_var : 1 # will take 2x as long, adds a per-node variance stat to each attractor


# implementation details
steps_per_lap_gain : 2 # how steps per lap increases as oscillations are not found, set to 1 to turn off
fraction_per_lap : .9 # fraction of networks needed to satisfy stop condition to exit a lap
clause_bin_size : 4 # number of clauses each threads merges at once

# input
model_file: 'models/toy.bnet'  

# output
output_dir : 'output/'
output_img : 'toy.png'
savefig : False  # false: an output image will pop up. true: output will appear as output_dir/output_img