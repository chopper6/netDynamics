# main parameter file
# YAML is like JSON, but with more minimal syntax and allows comments
# param.py also adds support for scientific notation in the form: 10^8

debug : true      # adds various checks, may slow the code down
verbose : true    # prints out more info 
print_lap : 10    # how many laps before another print statement. only if verbose 

parallelism : 10^2        # number of networks to run in parallel (on my desktop 10^5 is the limit with fumia network)
num_samples : 10^2        # number of initial states tested. It is best to keep it = parallelism
steps_per_lap : 10^3      # number of times to update net in a lap, unless 'lap_stop_rule' is triggered
# note that 'steps_per_lap' is also the assumed transient period for async update methods

update_rule : 'sync'      # node update scheme: 'sync', 'async', or 'Gasync' 
# WARNING: async is not efficiently implemented, recommended only to compare with Gasync
# Gasync = "generalized async" where a subset of nodes are sync updated each step 

use_inputs_in_pheno: 1    # if True, a phenotype is the input and output nodes

loopy_reps: 1             # ignore
skips_precise_oscils: 0   # ignore
steady_basin: 0            # use steady basin (aka dynamic input dependent phenotypes)
var_window: 50             # ignore

PBN :                       # probabilistic boolean network
  active : False            # PBN is only used if active=True
  float : False             # each instance tracks the average of an ensemble
  float_update : False      # update Gasync using float, in progress
  flip_pr : 0.01            # probability of a node flip

# implementation details
steps_per_lap_gain : 2 # how steps per lap increases as oscillations are not found, set to 1 to turn off
fraction_per_lap : 1 # leave as 1. Fraction of networks needed to satisfy stop condition to exit a lap
clause_bin_size : 4 # number of clauses each threads merges at once

# input
model_file: 'models/toy.bnet'           # the default model file
parity_model_file: 'models/toyExp.bnet' # the expanded network version of the model
setting_file: 'settings/toy.yaml'       # the setting file, which specifies inputs, outputs, mutations, ect

# output
output_dir : 'output/'                # output directory
output_img : 'test.png'               # name of image, if savefig = True
savefig : False                       # saves the image if True, otherwise produces a pop-up