# main parameter file
# YAML is like JSON, but with more minimal syntax and allows comments
# parse.py also adds support for scientific notation in the form: 10^8

debug : true # adds various checks, may cause slow down
verbose : true # prints out more info 
print_lap : 10^1 # how many laps before another print statement. only if verbose 

num_samples : 10^4  # number of initial states tested. false to turn off (and use only max_laps instead)
max_steps_per_sample : 10^3 # max number of network steps taken, before a sample is assumed to not reach steady state

steps_per_lap : 10^3 # number of times to update net in a lap, unless 'lap_stop_rule' is triggered
lap_stop_rule : 'steady' # options: false, steady. Lap always finishes after 'steps_per_lap' at the latest
max_laps : false # max number of total laps, false to turn off (and use only num_samples instead)

exhaustive : false # all possible init conditions, otherwise random init conditions. Ignores num_samples and max_laps
sync : true # node update scheme. currently only sync is implemented

# parallel
parallelism : 10^4 # number of networks to run in parallel (on my desktop 10^4 is the limit)
percent_steady : .5 # percent of networks in steady state to exit runNet loop
clause_bin_size : 8 # number of clauses each threads merges at once

# input
net_file : 'input/fumia.txt' # examples: 'input/fumia.txt', 'input/simpleNet.txt'. See README for syntax description
pheno_file: 'input/fumiaPhenos.yaml' #'input/fumiaPhenos.yaml', 'input/simplePhenos.yaml' if you don't want it, use null or turn use_phenos off
use_phenos : true # quick way to disable phenotypes and ignore pheno_file

# output
output_img : 'output/basinSizes.png'
savefig : false # as opposed to showing the image